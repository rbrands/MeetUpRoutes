@using BlazorApp.Shared
@using BlazorApp.Client.Utils
@implements IDisposable
@inject AppState AppStateStore
@inject BackendApiRepository Api
@inject NavigationManager NavigationManager


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">MeetUpRoutes</a><br/>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <div class="nav-link font-weight-bold text-white">
                @AppStateStore.Tenant?.TenantName
            </div>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (AppStateStore.TrackKey != null)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href=@($"{AppStateStore.TrackKey}/routes")>
                    <span class="oi oi-location" aria-hidden="true"></span> Touren
                </NavLink>
            </li>
            <AuthorizeView>
                <Authorized>
                    @if (AppStateStore.IsUserConfirmed)
                    {
                        <li class="nav-item px-3">
                            <NavLink class="nav-link" href=@($"{AppStateStore.TrackKey}/editroute")>
                                <span class="oi oi-document" aria-hidden="true"></span> Tour anlegen
                            </NavLink>
                        </li>
                    }
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href=@($"{AppStateStore.TrackKey}/profile")>
                            <span class="oi oi-person" aria-hidden="true"></span> Profil
                        </NavLink>
                    </li>
                </Authorized>
            </AuthorizeView>
        }
        <AuthorizeView Roles="@AppStateStore.Tenant.AdminRole">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href=@($"{AppStateStore.TrackKey}/members")>
                        <span class="oi oi-people" aria-hidden="true"></span> Mitglieder
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href=@($"{AppStateStore.TrackKey}/tags")>
                        <span class="oi oi-tags" aria-hidden="true"></span> Tags
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="about">
                <span class="oi oi-lightbulb" aria-hidden="true"></span> Über ...
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        AppStateStore.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppStateStore.OnChange -= StateHasChanged;
    }

}
