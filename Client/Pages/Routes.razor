@page "/{TrackKey}/routes"
@using BlazorApp.Client.Utils
@using BlazorApp.Shared
@inject AppState AppStateStore
@inject BackendApiRepository Api
@inject ClubCheck ClubCheck
@inject NavigationManager NavigationManager

<div class="jumbotron">
    Hier findest du die Zusammenstellung aller Touren - sortiert nach Aktualität, d.h. die neuesten Touren stehen oben. Nutze die Filterfunktonen,
    um leichter zu finden was du suchst.
</div>
<BlazorApp.Client.Shared.NotificationMessage @ref="@_notificationMessage" />

<h3>Touren</h3>
@if (null == _routes)
{
    <p><em>Deine Zugriffsrechte werden geprüft und Daten werden geladen... Beim ersten Aufruf dauert das ein bisschen.</em></p>
}
else
{
    <p>
        <AuthorizeView>
            <Authorized>
                <a class="btn btn-primary" href=@($"{AppStateStore.TrackKey}/editroute") title="Neue Tour" hidden="@(false && !AppStateStore.IsUserConfirmed)">Neue Tour</a>
            </Authorized>
        </AuthorizeView>
    </p>
    <div class="row">
        @foreach (ExtendedRoute route in _routes)
        {
            <div class="col-12 col-sm-6 col-lg-4 col-xl-4 mt-2">
                <RouteCard RouteItem="@route"></RouteCard>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public string TrackKey { get; set; }
    private NotificationMessage _notificationMessage;
    IEnumerable<ExtendedRoute> _routes = null;
    RouteFilter _filter = new RouteFilter();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Check if a club is given as part of url or selected before
            if (!await ClubCheck.SetClub(TrackKey))
            {
                NavigationManager.NavigateTo("/");
                return;
            }
            _routes = await Api.GetRoutes(_filter);
        }
        catch (Exception ex)
        {
            _notificationMessage.ShowError($"Fehler: {ex.Message}");
            return;
        }
    }


}
